#define #else #elseif #endmacro #error #if #ifdef #ifndef #inclib #include #lang #libpath #line #macro #pragma #print #undef $begin $debug $dynamic $finish $ignore $inc $include $linesize $list $module $name $ocode $option $page $pagei $pagesize $process $skip $start $static $stringpool $subtitle $title __date__ __fb_bigendian__ __fb_debug__ __fb_dos__ __fb_err__ __fb_lang__ __fb_linux__ __fb_main__ __fb_min_version__ __fb_mt__ __fb_option_byval__ __fb_option_dynamic__ __fb_option_escape__ __fb_option_explicit__ __fb_option_private__ __fb_out_dll__ __fb_out_exe__ __fb_out_lib__ __fb_out_obj__ __fb_signature__ __fb_ver_major__ __fb_ver_minor__ __fb_ver_patch__ __fb_version__ __fb_win32__ __file__ __file_nq__ __function__ __function_nq__ __line__ __path__ __time__ abs abstract accelerators access acos alias allocate alt and andalso any append as asc asin asm assert atan2 atn autocheckbox autoradiobutton base basic beep begin bin bin$ binary bit bitmap bitreset bitset bload block boolean bsave byref byte byval call callocate calls caption case cast cbyt cbyte ccur cdbl cdecl chain chdir chdrive chr chr$ cint circle class clear clng clngint close cls color com combobox command command$ common compileline compileline$ condbroadcast condcreate conddestroy condsignal condwait const constructor continue control cos cptr cshort csign csng csrlin cubyte cuint culng culngint culngnt cunsg curdir curdir$ cursor cushort cvb cvc cvd cvi cvl cvlongint cvs cvshort data date date$ deallocate declare def defbyte defcur defdbl defined defint deflng defshort defsng defstr defubyte defuint defushort delete destructor dialogex dim dir dir$ disablebopt disablefold disableincdec disableperiodmsg disableshifts disabletest disabletrim discardable do double draw dylibfree dylibload dylibsymbol dynamic edittext else elseif end endif enum environ environ$ eof eqv erase erdev erdev$ erl err error error$ escape event exec exepath exit exp explicit export exstyle extends extern false field fileattr fileos files filetype fileversion fix flip font for format fortran frac fre freefile function get getkey getmouse go gosub goto groupbox hex hex$ hibyte hiword hwnd icon if iif imp inkey$ inp input input$ instr instrrev int integer ioctl ioctl$ is key kill lbound lcase lcase$ left left$ len let lib line linenumber list listbox lobyte loc local locate lock lof log long longint loop loword lpos lprint lset ltext ltrim ltrim$ menu menuitem mid mid$ mkb$ mkc$ mkd mkd$ mkdir mki mki$ mkl mkl$ mklongint mks mks$ mkshort mod multikey mutexcreate mutexdestroy mutexlock mutexunlock name namespace new next noinvert not null object oct oct$ off offset on once open operator option or orelse out output overload override paint palette pascal pcopy peek peekbyte peekcurr peeki peeklong peeks peekword pen play pmap point pointer poke pokebyte pokecurr pokei pokelong pokes pokeword popup pos preserve preset print private procptr productversion property protected pset ptr public pushbutton put random randomize read reallocate redim rem reset restore resume return rgb right right$ rmdir rnd rol ror rset rtrim rtrim$ run sadd scope screen screencopy screeninfo screenlock screenptr screenres screenset screenunlock seek seg seg$ select separator setenviron setmem sgn shared shell shift shl short shr signal sin single sizeof sleep sound space space$ spc sqr sseg ssegadd stack static stdcall step stick stop str str$ strcat strchr strcmp strcpy strig string string$ stringtable strlen strncat strncmp strncpy strptr strrchr strstr style sub swap syscall system tab tan test testnot then threadcreate threadwait time time$ timer to trim trim$ true type ubound ubyte ucase ucase$ uinteger ulong ulongint union unlock until ushort using va_arg va_first va_next val val64 valint value var varptr varptr$ varseg versioninfo view virtkey virtual wait wbin wchr wend whex while width wincon window windowtitle wingui with woct write wspace wstr wstring xor zstring


